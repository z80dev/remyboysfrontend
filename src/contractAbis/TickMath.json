{"abi":[],"contractName":"TickMath","deploymentBytecode":{"bytecode":"0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a982da90b1fa2fb13f7170f047e439cfb6fe1ad32f3e80dfb8f00c8962ba955c64736f6c63430007060033"},"devdoc":{"kind":"dev","methods":{},"stateVariables":{"MAX_SQRT_RATIO":{"details":"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"},"MAX_TICK":{"details":"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"},"MIN_SQRT_RATIO":{"details":"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"},"MIN_TICK":{"details":"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"}},"title":"Math library for computing sqrt prices from ticks and vice versa","version":1},"methodIdentifiers":{},"runtimeBytecode":{"bytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a982da90b1fa2fb13f7170f047e439cfb6fe1ad32f3e80dfb8f00c8962ba955c64736f6c63430007060033"},"sourceId":"univ3/libraries/TickMath.sol","sourcemap":"313:8331:189:-:0;;;;;;;;;;;;;;;;;;;;;;;;;","userdoc":{"kind":"user","methods":{},"notice":"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128","version":1}}