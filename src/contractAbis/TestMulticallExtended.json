{"abi":[{"inputs":[{"internalType":"uint256","name":"a","type":"uint256"},{"internalType":"uint256","name":"b","type":"uint256"}],"name":"functionThatReturnsTuple","outputs":[{"components":[{"internalType":"uint256","name":"a","type":"uint256"},{"internalType":"uint256","name":"b","type":"uint256"}],"internalType":"struct TestMulticallExtended.Tuple","name":"tuple","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"previousBlockhash","type":"bytes32"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_time","type":"uint256"}],"name":"setTime","outputs":[],"stateMutability":"nonpayable","type":"function"}],"contractName":"TestMulticallExtended","deploymentBytecode":{"bytecode":"0x608060405234801561001057600080fd5b50610677806100206000396000f3fe60806040526004361061004a5760003560e01c80631f0464d11461004f5780633b16a6a3146100785780633beb26c4146100a55780635ae401dc146100c7578063ac9650d8146100da575b600080fd5b61006261005d3660046103b4565b6100ed565b60405161006f919061053b565b60405180910390f35b34801561008457600080fd5b506100986100933660046104de565b610147565b60405161006f91906105b5565b3480156100b157600080fd5b506100c56100c0366004610495565b610168565b005b6100626100d53660046104ad565b61016d565b6100626100e8366004610374565b6101c2565b60608380600143034014610134576040805162461bcd60e51b8152602060048201526009602482015268084d8dec6d6d0c2e6d60bb1b604482015290519081900360640190fd5b61013e84846101c2565b95945050505050565b61014f610311565b5060408051808201909152908152602081019190915290565b600055565b6060838061017961030b565b1115610134576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b60608167ffffffffffffffff811180156101db57600080fd5b5060405190808252806020026020018201604052801561020f57816020015b60608152602001906001900390816101fa5790505b50905060005b82811015610304576000803086868581811061022d57fe5b905060200281019061023f91906105cc565b60405161024d92919061052b565b600060405180830381855af49150503d8060008114610288576040519150601f19603f3d011682016040523d82523d6000602084013e61028d565b606091505b5091509150816102e2576044815110156102a657600080fd5b600481019050808060200190518101906102c091906103fe565b60405162461bcd60e51b81526004016102d9919061059b565b60405180910390fd5b808484815181106102ef57fe5b60209081029190910101525050600101610215565b5092915050565b60005490565b604051806040016040528060008152602001600081525090565b60008083601f84011261033c578081fd5b50813567ffffffffffffffff811115610353578182fd5b602083019150836020808302850101111561036d57600080fd5b9250929050565b60008060208385031215610386578182fd5b823567ffffffffffffffff81111561039c578283fd5b6103a88582860161032b565b90969095509350505050565b6000806000604084860312156103c8578081fd5b83359250602084013567ffffffffffffffff8111156103e5578182fd5b6103f18682870161032b565b9497909650939450505050565b60006020828403121561040f578081fd5b815167ffffffffffffffff80821115610426578283fd5b818401915084601f830112610439578283fd5b81518181111561044557fe5b604051601f8201601f19168101602001838111828210171561046357fe5b60405281815283820160200187101561047a578485fd5b61048b826020830160208701610611565b9695505050505050565b6000602082840312156104a6578081fd5b5035919050565b6000806000604084860312156104c1578283fd5b83359250602084013567ffffffffffffffff8111156103e5578283fd5b600080604083850312156104f0578182fd5b50508035926020909101359150565b60008151808452610517816020860160208601610611565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561058e57603f1988860301845261057c8583516104ff565b94509285019290850190600101610560565b5092979650505050505050565b6000602082526105ae60208301846104ff565b9392505050565b815181526020918201519181019190915260400190565b6000808335601e198436030181126105e2578283fd5b83018035915067ffffffffffffffff8211156105fc578283fd5b60200191503681900382131561036d57600080fd5b60005b8381101561062c578181015183820152602001610614565b8381111561063b576000848401525b5050505056fea264697066735822122032c90e6611d68ad0e21aa273ecf0481db8573fca98edeeb8f9a9064e31dfb18b64736f6c63430007060033"},"devdoc":{"kind":"dev","methods":{"multicall(bytes32,bytes[])":{"details":"The `msg.value` should not be trusted for any method callable from multicall.","params":{"data":"The encoded function data for each of the calls to make to this contract","previousBlockhash":"The expected parent blockHash"},"returns":{"_0":"The results from each of the calls passed in via data"}},"multicall(bytes[])":{"details":"The `msg.value` should not be trusted for any method callable from multicall.","params":{"data":"The encoded function data for each of the calls to make to this contract"},"returns":{"results":"The results from each of the calls passed in via data"}},"multicall(uint256,bytes[])":{"details":"The `msg.value` should not be trusted for any method callable from multicall.","params":{"data":"The encoded function data for each of the calls to make to this contract","deadline":"The time by which this function must be called before failing"},"returns":{"_0":"The results from each of the calls passed in via data"}}},"version":1},"methodIdentifiers":{"functionThatReturnsTuple(uint256,uint256)":"0x3b16a6a3","multicall(bytes32,bytes[])":"0x1f0464d1","multicall(bytes[])":"0xac9650d8","multicall(uint256,bytes[])":"0x5ae401dc","setTime(uint256)":"0x3beb26c4"},"runtimeBytecode":{"bytecode":"0x60806040526004361061004a5760003560e01c80631f0464d11461004f5780633b16a6a3146100785780633beb26c4146100a55780635ae401dc146100c7578063ac9650d8146100da575b600080fd5b61006261005d3660046103b4565b6100ed565b60405161006f919061053b565b60405180910390f35b34801561008457600080fd5b506100986100933660046104de565b610147565b60405161006f91906105b5565b3480156100b157600080fd5b506100c56100c0366004610495565b610168565b005b6100626100d53660046104ad565b61016d565b6100626100e8366004610374565b6101c2565b60608380600143034014610134576040805162461bcd60e51b8152602060048201526009602482015268084d8dec6d6d0c2e6d60bb1b604482015290519081900360640190fd5b61013e84846101c2565b95945050505050565b61014f610311565b5060408051808201909152908152602081019190915290565b600055565b6060838061017961030b565b1115610134576040805162461bcd60e51b8152602060048201526013602482015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604482015290519081900360640190fd5b60608167ffffffffffffffff811180156101db57600080fd5b5060405190808252806020026020018201604052801561020f57816020015b60608152602001906001900390816101fa5790505b50905060005b82811015610304576000803086868581811061022d57fe5b905060200281019061023f91906105cc565b60405161024d92919061052b565b600060405180830381855af49150503d8060008114610288576040519150601f19603f3d011682016040523d82523d6000602084013e61028d565b606091505b5091509150816102e2576044815110156102a657600080fd5b600481019050808060200190518101906102c091906103fe565b60405162461bcd60e51b81526004016102d9919061059b565b60405180910390fd5b808484815181106102ef57fe5b60209081029190910101525050600101610215565b5092915050565b60005490565b604051806040016040528060008152602001600081525090565b60008083601f84011261033c578081fd5b50813567ffffffffffffffff811115610353578182fd5b602083019150836020808302850101111561036d57600080fd5b9250929050565b60008060208385031215610386578182fd5b823567ffffffffffffffff81111561039c578283fd5b6103a88582860161032b565b90969095509350505050565b6000806000604084860312156103c8578081fd5b83359250602084013567ffffffffffffffff8111156103e5578182fd5b6103f18682870161032b565b9497909650939450505050565b60006020828403121561040f578081fd5b815167ffffffffffffffff80821115610426578283fd5b818401915084601f830112610439578283fd5b81518181111561044557fe5b604051601f8201601f19168101602001838111828210171561046357fe5b60405281815283820160200187101561047a578485fd5b61048b826020830160208701610611565b9695505050505050565b6000602082840312156104a6578081fd5b5035919050565b6000806000604084860312156104c1578283fd5b83359250602084013567ffffffffffffffff8111156103e5578283fd5b600080604083850312156104f0578182fd5b50508035926020909101359150565b60008151808452610517816020860160208601610611565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561058e57603f1988860301845261057c8583516104ff565b94509285019290850190600101610560565b5092979650505050505050565b6000602082526105ae60208301846104ff565b9392505050565b815181526020918201519181019190915260400190565b6000808335601e198436030181126105e2578283fd5b83018035915067ffffffffffffffff8211156105fc578283fd5b60200191503681900382131561036d57600080fd5b60005b8381101561062c578181015183820152602001610614565b8381111561063b576000848401525b5050505056fea264697066735822122032c90e6611d68ad0e21aa273ecf0481db8573fca98edeeb8f9a9064e31dfb18b64736f6c63430007060033"},"sourceId":"uni-swap-routers/test/TestMulticallExtended.sol","sourcemap":"125:464:109:-:0;;;;;;;;;;;;;;;;;;;","userdoc":{"kind":"user","methods":{"multicall(bytes32,bytes[])":{"notice":"Call multiple functions in the current contract and return the data from all of them if they all succeed"},"multicall(bytes[])":{"notice":"Call multiple functions in the current contract and return the data from all of them if they all succeed"},"multicall(uint256,bytes[])":{"notice":"Call multiple functions in the current contract and return the data from all of them if they all succeed"}},"version":1}}